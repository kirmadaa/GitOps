name: Deploy to Testing
on:
  pull_request:
    types: [closed]
    branches: [main]
    paths:
      - 'environments/promote.yaml'

jobs:
  check-promotion:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      is-promotion: ${{ steps.check-label.outputs.promotion }}
      target-environment: ${{ steps.check-environment.outputs.env }}
    steps:
    - name: Check for Promotion Label
      id: check-label
      run: |
        if gh pr view ${{ github.event.pull_request.number }} --json labels | jq -e '.labels[] | select(.name == "promotion")'; then
          echo "promotion=true" >> $GITHUB_OUTPUT
        else
          echo "promotion=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Determine Target Environment
      id: check-environment
      run: |
        if gh pr view ${{ github.event.pull_request.number }} --json labels | jq -e '.labels[] | select(.name == "testing")'; then
          echo "env=testing" >> $GITHUB_OUTPUT
        else
          echo "env=none" >> $GITHUB_OUTPUT
        fi

  deploy:
    needs: check-promotion
    if: needs.check-promotion.outputs.is-promotion == 'true' && needs.check-promotion.outputs.target-environment == 'testing'
    runs-on: ubuntu-latest
    environment: 
      name: testing
      url: hhttps://kubernetes.default.svc
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.10.1
        
    - name: Install Helmfile
      run: |
        curl -fsSL -o helmfile_linux_amd64 https://github.com/roboll/helmfile/releases/download/v0.144.0/helmfile_linux_amd64
        chmod +x helmfile_linux_amd64
        sudo mv helmfile_linux_amd64 /usr/local/bin/helmfile
        
    - name: Validate Deployment
      run: |
        helmfile -e testing lint
        helmfile -e testing diff
        
    - name: Deploy to Testing
      run: |
        helmfile -e testing apply
        
    - name: Verify Deployment
      run: |
        kubectl get pods -n testing
        kubectl get deployments -n testing